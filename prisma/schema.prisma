// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)
  email     String   @unique
  password  String
  firstName String?
  lastName  String?

  account          Account[]
  GroupUserMapping GroupUserMapping[]
}

model Account {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  userId      String        @db.Uuid
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Transaction Transaction[]
}

model Group {
  id               String             @id @default(uuid()) @db.Uuid
  createdAt        DateTime           @default(now()) @db.Timestamptz(3)
  updatedAt        DateTime           @updatedAt @db.Timestamptz(3)
  name             String
  GroupUserMapping GroupUserMapping[]
}

model GroupUserMapping {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  groupId String
  group   Group  @relation(fields: [groupId], references: [id], onDelete: Cascade)
}

enum TransactionType {
  EXPENSE
  INCOME
  TRANSFER
}

model Transaction {
  id              String          @id @default(uuid()) @db.Uuid
  createdAt       DateTime        @default(now()) @db.Timestamptz(3)
  updatedAt       DateTime        @updatedAt @db.Timestamptz(3)
  amount          Decimal         @db.Money
  transactionType TransactionType

  accountId String  @db.Uuid
  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
}

model Category {
  id        String   @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now()) @db.Timestamptz(3)
  updatedAt DateTime @updatedAt @db.Timestamptz(3)
  name      String
}

enum ExpenseType {
  EQUAL
  UNEQUAL
  PERCENTAGE
}

model Expense {
  id          String  @id @default(uuid()) @db.Uuid
  description String
  amount      Decimal
  paidByUser  String
}
